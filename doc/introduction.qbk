[section:introduction Introduction]

The gdb-runner is a tool that automates the execution of gdb, utilizing plugins in order to implement breakpoints. 

The main target for this tool is the usage on embedded systems without an operating system. We provide
several libraries for testing and analyzation.

*Automate testing on embedded Systems
*Unintrusive monitoring and modifying
*Extension facilities
*Launch gdb-server in the same command
 
As example, we take a given arm elf with openocd through the gdb-runner, using our
[link gdb-runner.plugins.exitcode exit-code] and [link gdb-runner.plugins.newlib newlib] plugins.


[def mw-gdb-runner [link gdb-runner.invocation mw-gdb-runner]]
[def --gdb [link gdb-runner.invocation.gdb --gdb]]
[def --exe [link gdb-runner.invocation.exe --exe]]
[def --lib [link gdb-runner.invocation.lib --lib]]
[def --remote [link gdb-runner.invocation.remote --remote]]
[def --other [link gdb-runner.invocation.other --other]]

	
[teletype]
```
mw-gdb-runner --gdb=arm-none-eabi-gdb --exe=arm-test.elf --lib mw-newlib-syscalls mw-exitcode --remote localhost:3333 --other "openocd -f interface/stlink-v2.cfg -f target/stm32f4x.cfg -c init"
```

[endsect]