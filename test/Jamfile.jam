import testing ;
import path ;
import regex ;

import os ;

if [ os.name ] = NT
{
  lib ws2_32 ;
}


project gdb-test :
	source-location .	
	: requirements
	<define>UNIT_TEST
	<use>/boost//headers
	<include>../include
	;
	

lib plugin : plugin.cpp : <link>shared ;
alias filesystem : /boost//filesystem : <link>static ;
exe target : target.cpp /boost//filesystem :  <debug-symbols>on <link>static ;

alias btest : /boost//unit_test_framework ;

rule test-all
{
	return ;
   local all_rules = ;
   local headers_path = [ path.make ../include/mw/gdb/parsers ] ;
   for file in [ path.glob-tree $(headers_path) : *.hpp : detail ]
   {
        local rel_file = [ path.relative-to $(headers_path) $(file)  ] ;
        local test_name = [ regex.replace $(rel_file) "/" "-" ] ;
        
   		echo Testing Parser $(file) ;
   		all_rules += [ run parser.cpp /boost//system : : : 
   					   <library>/boost//unit_test_framework
   		               <define>"MW_GDB_HEADER=$(rel_file)" 
   		               <dependency>$(file) 
   		               <target-os>windows,<toolset>cw:<library>ws2_32
                       <target-os>windows,<toolset>gcc:<library>ws2_32
   		               
   		               : ~$(test_name) ] ;
   }
   return $(all_rules) ;
}	

test-suite gdb-parser : 
	#[ test-all r ]
	[ run parser.cpp ../src/mw/gdb/mi2/output.cpp : : : <include>../../libs/pegtl <library>btest ]
	#[ run test_runner.cpp filesystem : : /gdb-runner//mw-gdb-runner plugin target  ]
	;