
import os ;

if [ os.name ] = NT
{
  lib ws2_32 ;
}

import modules ;

project gdb-runner :
	source-location src	
	: requirements
	<include>./include
	<toolset>gcc:<cxxflags>-ftemplate-depth=512
	;
	

alias system 			 : /boost//system 			 : <link>static ;
alias program_options  	 : /boost//program_options   : <link>static ;
alias filesystem 		 : /boost//filesystem 		 : <link>static ;
alias locale 			 : /boost//locale 			 : <link>static ;
alias context 		 	 : /boost//context 			 : <link>static ;
alias coroutine 		 : /boost//coroutine         : <link>static ;

alias boosts : system program_options filesystem locale context coroutine  ;

import testing ;

exe mw-dbg-runner : 
		debug-runner.cpp 
		[ glob mw/debug/*.cpp ]
		[ glob mw/gdb/mi2/*.cpp ]
		mw/gdb/process.cpp
		boosts : <link>static
		<library>/boost//regex 
		<variant>debug:<optimization>space
        <target-os>windows,<toolset>cw:<library>ws2_32 <target-os>windows,<toolset>gcc:<library>ws2_32
        ;

exe target : ../test/target.cpp /boost//filesystem :  <linkflags>-static-libstdc++ <debug-symbols>on <optimization>off ;

lib mw-newlib-syscalls : mw-newlib.cpp   : <link>shared <library>/boost//system <target-os>windows,<toolset>cw:<library>ws2_32 <target-os>windows,<toolset>gcc:<library>ws2_32 ;
lib mw-exitcode        : mw-exitcode.cpp : <link>shared <library>/boost//system <target-os>windows,<toolset>cw:<library>ws2_32 <target-os>windows,<toolset>gcc:<library>ws2_32 ;

