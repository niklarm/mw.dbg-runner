
import os ;

if [ os.name ] = NT
{
  lib ws2_32 ;
}

import modules ;

project dbg-runner :
	source-location src	
	: requirements
	<include>./include
	<toolset>gcc:<cxxflags>-ftemplate-depth=512
	;
	

alias system 			 : /boost//system 			  ;
alias program_options  	 : /boost//program_options    ;
alias filesystem 		 : /boost//filesystem 		  ;
alias locale 			 : /boost//locale 			  ;
alias context 		 	 : /boost//context 			  ;
alias coroutine 		 : /boost//coroutine          ;
alias regex              : /boost//regex              ;

alias boosts : system program_options filesystem locale context coroutine  ;

import testing ;

lib mw-dbg-core : [ glob mw/debug/*.cpp ] :
        <target-os>windows,<toolset>cw:<library>ws2_32 
		<target-os>windows,<toolset>gcc:<library>ws2_32
		<library>system
		<library>coroutine
		<library>regex
		<library>filesystem
		<variant>debug:<optimization>space 
		;


lib mw-gdb-mi2 : [ glob mw/gdb/mi2/*.cpp ] mw/gdb/process.cpp mw-dbg-core : 
		<target-os>windows,<toolset>cw:<library>ws2_32 
		<target-os>windows,<toolset>gcc:<library>ws2_32
		<library>system
		<library>coroutine
		<library>mw-dbg-core
		<variant>debug:<optimization>space 
		;


exe mw-dbg-runner : 
		debug-runner.cpp 
		boosts : <link>static
		<library>/boost//regex
		<library>mw-gdb-mi2 
		<library>mw-dbg-core 
		<variant>debug:<optimization>space
        <target-os>windows,<toolset>cw:<library>ws2_32 <target-os>windows,<toolset>gcc:<library>ws2_32
        ;

exe target : ../test/target.cpp /boost//filesystem :  <linkflags>-static-libstdc++ <debug-symbols>on <optimization>off ;

lib mw-newlib-syscalls : mw-newlib.cpp   : <link>shared <library>/boost//system <target-os>windows,<toolset>cw:<library>ws2_32 <target-os>windows,<toolset>gcc:<library>ws2_32 ;
lib mw-exitcode        : mw-exitcode.cpp : <link>shared <library>/boost//system <target-os>windows,<toolset>cw:<library>ws2_32 <target-os>windows,<toolset>gcc:<library>ws2_32 ;

